<?php

/**
 * Created by PhpStorm.
 * User: SABER KHALIFA
 * Date: 20/10/2016
 * Time: 09:41
 */
class ProduitRepository extends MarketRepository
{

    /**
     * THE ROLE OF THIS METHOD IS TO INSERT NEW PRODUIT
     * @param Produit $produit
     */
    public function persist(Produit $produit)
    {
        parent::save($produit); // TODO: Change the autogenerated stub
    }

    /**
     * THE ROLE OF THIS METHOD IS TO UPDATE  PRODUIT
     * @param Produit $produit
     */
    public function merge(Produit $produit)
    {
        parent::update($produit);
    }
    /**
     *  THE ROLE OF THIS METHOD IS TO DELETE  PRODUIT FROM THE TABLE
     * @param $object
     */
    public function remove($object)
    {
        parent::delete($object); // TODO: Change the autogenerated stub
    }
    /**
     * THE ROLE OF THIS METHOD IS TO GET ALL PRODUIT
     * @return array
     */
    public function getAll()
    {
        $data = array();
        $rs = parent::findAll(array("name" => "Produit"));
        foreach ($rs as $k => $v) {
            foreach ($v as $vi) {
                $data[$k] = new Produit($v['PRODID'], $v['CATEGID'], $v['NOM'],$v['designation'], $v['PRIX'], $v['QUANTITE']);
            }
        }

        return $data;
    }
    /**
     * THE ROLE OF THIS METHOD IS TO FIND  PRODUIT BY ID
     * @param $value
     * @return array
     */
    public function getOne($value)
    {
        $data = array();
        $rs = parent::findOne(array("name" => "Produit", "id" => "PRODID", "value" => $value));
        foreach ($rs as $k => $v) {
            foreach ($v as $vi) {
                $data[$k] = new Produit($v['PRODID'], $v['CATEGID'], $v['NOM'],$v['designation'], $v['PRIX'], $v['QUANTITE']);
            }
        }
        return $data;
    }
    /**
     *  THE ROLE OF THIS METHOD IS TO FIND THE LAST ITEM BYE INDEX
     * @param $size
     * @return array
     */
    public function getPage($size)
    {
        $data = array();
        $rs = parent::findPage(array("name" => "Produit","id"=>"PRODID","size" => $size));
        foreach ($rs as $k => $v) {
            foreach ($v as $vi) {
                $data[$k] = new Produit($v['PRODID'], $v['CATEGID'], $v['NOM'],$v['designation'], $v['PRIX'], $v['QUANTITE']);
            }
        }
        return $data;
    }
}